{
  "version": 3,
  "sources": ["../src/twitch-api.ts"],
  "sourcesContent": ["import { default as axios } from 'axios';\r\n\r\nconst CLIENT_ID = 'obgkb95iqahks1jtlzu4unrjvaq205';\r\n\r\nexport class TwitchApi {\r\n    private authToken: string;\r\n    private username: string;\r\n    private userId = '';\r\n    logger: ioBroker.Logger;\r\n    public constructor(authToken: string, username: string, logger: ioBroker.Logger) {\r\n        this.authToken = authToken;\r\n        this.username = username;\r\n        this.logger = logger;\r\n    }\r\n\r\n    public async initialize(): Promise<void> {\r\n        this.userId = await this.getUserId();\r\n    }\r\n\r\n    public async getFollowers(): Promise<any> {}\r\n\r\n    private getUserId(): Promise<string> {\r\n        const userInformationUrl = 'https://api.twitch.tv/helix/users';\r\n        return axios\r\n            .get(userInformationUrl, {\r\n                headers: {\r\n                    login: this.username,\r\n                    Authorization: `Bearer ${this.authToken}`,\r\n                    'Client-Id': CLIENT_ID,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                return res.data.data[0].id;\r\n            })\r\n            .catch((err) => {\r\n                this.logger.error(`Error while getting user id: ${err}`);\r\n            });\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiC;AAEjC,MAAM,YAAY;AAEX,MAAM,UAAU;AAAA,EAKZ,YAAY,WAAmB,UAAkB,QAAyB;AAFjF,SAAQ,SAAS;AAGb,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,SAAS;AAAA,EAClB;AAAA,EAEA,MAAa,aAA4B;AACrC,SAAK,SAAS,MAAM,KAAK,UAAU;AAAA,EACvC;AAAA,EAEA,MAAa,eAA6B;AAAA,EAAC;AAAA,EAEnC,YAA6B;AACjC,UAAM,qBAAqB;AAC3B,WAAO,aAAAA,QACF,IAAI,oBAAoB;AAAA,MACrB,SAAS;AAAA,QACL,OAAO,KAAK;AAAA,QACZ,eAAe,UAAU,KAAK;AAAA,QAC9B,aAAa;AAAA,MACjB;AAAA,IACJ,CAAC,EACA,KAAK,CAAC,QAAQ;AACX,aAAO,IAAI,KAAK,KAAK,GAAG;AAAA,IAC5B,CAAC,EACA,MAAM,CAAC,QAAQ;AACZ,WAAK,OAAO,MAAM,gCAAgC,KAAK;AAAA,IAC3D,CAAC;AAAA,EACT;AACJ;",
  "names": ["axios"]
}
